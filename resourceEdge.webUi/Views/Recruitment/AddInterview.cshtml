@model resourceEdge.Domain.Entities.InterviewViewModel
@using resourceEdge.Domain.ViewModels;
@{
    ViewBag.Title = "AddInterview";
    Layout = "~/Views/Shared/Layouts/_HrLayout.cshtml";
    var dropDown = (InterviewDropDown)ViewBag.dropDown;
   
}

@using (Html.BeginForm("AddInterview", "Recruitment",null,FormMethod.Post, new { data_parsley_validate = "" }))
{
    @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Requisition ID", htmlAttributes: new { @class = "control-label " })
                @Html.DropDownList("RequisitionId", dropDown.Requisition, "Select Requisition Id", htmlAttributes: new { @class = "form-control", required = "" })
                @Html.ValidationMessageFor(model => model.RequisitionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Interview Status", htmlAttributes: new { @class = "control-label " })
                @Html.DropDownList("InterviewStatusId", dropDown.interviewStatus, "Select interview type", htmlAttributes: new { @class = "form-control",@readonly = "readonly"})
                @Html.ValidationMessageFor(model => model.InterviewStatusId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Interviewer", htmlAttributes: new { @class = "control-label " })
                <select class="form-control" name="Interviewer" id="Interviewer" required="">
                    <option>Select interviewer</option>
                </select>
                @Html.ValidationMessageFor(model => model.Interviewer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Location", htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.LocationId, new { htmlAttributes = new { @class = "form-control", required = "" } })
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", required = "" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", required = "" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Interview Type", htmlAttributes: new { @class = "control-label " })
                @Html.DropDownList("InterviewTypeId", dropDown.InterviewType, "Select interview Type", htmlAttributes: new { @class = "form-control",required = "" })
                @Html.ValidationMessageFor(model => model.InterviewTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Interview Date", htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.InterviewDate, new { htmlAttributes = new { @class = "form-control", type="date", required = "" } })
                @Html.ValidationMessageFor(model => model.InterviewDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Interview Time", htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.InterviewTime, new { htmlAttributes = new { @class = "form-control", type="time", required = "" } })
                @Html.ValidationMessageFor(model => model.InterviewTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Interview Name", htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.InterviewName, new { htmlAttributes = new { @class = "form-control", required = "" } })
                @Html.ValidationMessageFor(model => model.InterviewName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="" style="clear:both;">
                <input type="submit" value="Schedule Interview" class="btn btn-success pull-right" />
            </div>
        </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/Pages/JS/Requisition/AddInterview.js"></script>
}
