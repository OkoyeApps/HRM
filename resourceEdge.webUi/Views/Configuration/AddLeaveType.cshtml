@model resourceEdge.Domain.Entities.LeaveTypeViewModel

@{
    ViewBag.Title = "AddLeaveType";
    Layout = "~/Views/Shared/HRLayout.cshtml";
}

<h2>AddLeaveType</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>LeaveTypeViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
           
            @Html.LabelFor(model => model.leavetype, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.leavetype, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.leavetype, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numberofdays, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.numberofdays, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numberofdays, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.leavecode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.leavecode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.leavecode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.leavepreallocated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.leavepreallocated, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.leavepreallocated, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Plugins{
    <script src="~/assets/global/scripts/datatable.js" type="text/javascript"></script>
<script src="~/assets/global/plugins/datatables/datatables.min.js" type="text/javascript"></script>
<script src="~/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js" type="text/javascript"></script>

    }
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script src="~/assets/pages/scripts/table-datatables-buttons.min.js" type="text/javascript"></script>

}
