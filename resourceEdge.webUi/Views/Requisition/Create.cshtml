@model resourceEdge.Domain.Entities.RequisitionViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/mainLayout2.cshtml";
}
@section css{
    @*<link href="~/assets/global/plugins/bootstrap-select/css/bootstrap-select.min.css" rel="stylesheet" />*@
    <link href="~/assets/global/plugins/bootstrap-datepicker/css/bootstrap-datepicker3.min.css" rel="stylesheet" type="text/css" />
<link href="~/assets/global/plugins/bootstrap-wysihtml5/bootstrap-wysihtml5.css" rel="stylesheet" type="text/css" />
<link href="~/assets/global/plugins/bootstrap-markdown/css/bootstrap-markdown.min.css" rel="stylesheet" type="text/css" />
@*<link href="~/assets/global/plugins/bootstrap-summernote/summernote.css" rel="stylesheet" type="text/css" />*@
}

<div class="portlet box blue">
    <div class="portlet-title">
        <div class="caption">
            <i class="fa fa-gift"></i>NEW RECRUITMENT
        </div>
        <div class="tools">
            <a href="javascript:;" class="collapse"> </a>
        </div>
    </div>
    <div class="portlet light bordered">
        <div class="portlet-body form">

            @using (Html.BeginForm("Create", "Requisition", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-body">
                    <div class="row">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.RequisitionCode, htmlAttributes: new {  @class = "control-label" })
                                @Html.EditorFor(model => model.RequisitionCode, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control has-success input-circle-right" } })
                                @Html.ValidationMessageFor(model => model.RequisitionCode, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.BusinessunitId, htmlAttributes: new { @class = "control-label " })

                                @Html.DropDownListFor(model => model.BusinessunitId, (SelectList)ViewBag.jobTitles, htmlAttributes: new { @class = "form-control input-circle-right " })
                                @Html.ValidationMessageFor(model => model.BusinessunitId, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new { @class = "control-label " })
                                <select id="department" name="DepartmentId" data-live-search="true" class="form-control input-circle-right t"></select>
                                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                                <br />
                                <br />
                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.ReportingId, htmlAttributes: new { @class = "control-label " })

                                @Html.EditorFor(model => model.ReportingId, new { htmlAttributes = new { @class = "form-control input-circle-right " } })
                                @Html.ValidationMessageFor(model => model.ReportingId, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Approver1, htmlAttributes: new { @class = "control-label " })

                                @Html.EditorFor(model => model.Approver1, new { htmlAttributes = new { @class = "form-control input-circle-right " } })
                                @Html.ValidationMessageFor(model => model.Approver1, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Approver2, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.Approver2, new { htmlAttributes = new { @class = "form-control input-circle-right " } })
                                @Html.ValidationMessageFor(model => model.Approver2, "", new { @class = "text-danger" })
                                <br /><br />
                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Approver3, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.Approver3, new { htmlAttributes = new { @class = "form-control input-circle-right" } })
                                @Html.ValidationMessageFor(model => model.Approver3, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-md-4">
                                <label class="control-label">Due Date</label>
                                <div class="input-group input-medium date date-picker" data-date-format="dd-mm-yyyy" data-date-viewmode="years">
                                    <span class="input-group-btn input-circle-left">
                                        <button class="btn default" type="button">
                                            <i class="fa fa-calendar"></i>
                                        </button>
                                    </span>
                                    <input type="text" name="OnboardDate" class="form-control input-circle-right col-md-4">
                                </div>
                                <span class="hide" id="error_message_dateJoin" style="color:red">Please pick a date</span>
                                @Html.ValidationMessageFor(model => model.OnboardDate, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label " })

                                @Html.DropDownListFor(model => model.JobTitle, (SelectList)ViewBag.jobTitles, htmlAttributes: new { @class = "form-control input-circle-right" })
                                @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                                <br /><br />
                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.PositionId, htmlAttributes: new { @class = "control-label " })
                                <select id="Position" name="PositionId" class="form-control input-circle-right"></select>
                                @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-md-4">
                                @Html.Label("Required no of Positions", htmlAttributes: new { @class = "control-label " })

                                @Html.EditorFor(model => model.ReqNoPositions, new { htmlAttributes = new { @class = "form-control input-circle-right" } })
                                @Html.ValidationMessageFor(model => model.ReqNoPositions, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.EmpType, htmlAttributes: new { @class = "control-label " })

                                @Html.EditorFor(model => model.EmpType, new { htmlAttributes = new { @class = "form-control input-circle-right" } })
                                @Html.ValidationMessageFor(model => model.EmpType, "", new { @class = "text-danger" })
                                <br /><br />
                            </div>

                            <div class="col-md-12">   
                                    <label class="control-label">Job Description</label>
                                    <textarea name="JobDescription" class="wysihtml5 form-control" rows="6"></textarea>                         
                                <br /><br />
                            </div>

                            <div class="col-md-12">
                                <label class="control-label">Required Skills </label>
                                <textarea name="ReqSkills" class="wysihtml5 form-control input-circle" rows="6"></textarea>
                                <br /><br />
                            </div>


                            <div class="col-md-4">
                                @Html.LabelFor(model => model.AdditionalInfo, htmlAttributes: new { @class = "control-label " })
                                <textarea name="AdditionalInfo" class="form-control" rows="2"></textarea>
                                @Html.ValidationMessageFor(model => model.AdditionalInfo, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.ReqQualification, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.ReqQualification, new { htmlAttributes = new { @class = "form-control input-circle-right" } })
                                @Html.ValidationMessageFor(model => model.ReqQualification, "", new { @class = "text-danger" })
                       
                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.ReqExpYears, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.ReqExpYears, new { htmlAttributes = new { @class = "form-control input-circle-right" } })
                                @Html.ValidationMessageFor(model => model.ReqExpYears, "", new { @class = "text-danger" })
                                <br /><br />
                            </div>

                            

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.ReqPriority, htmlAttributes: new { @class = "control-label " })
                                @Html.EnumDropDownListFor(model => model.ReqPriority, htmlAttributes: new { @class = "form-control input-circle-right" })
                                @Html.ValidationMessageFor(model => model.ReqPriority, "", new { @class = "text-danger" })
                                <br /><br />
                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.ReqStatus, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.ReqStatus, new { htmlAttributes = new { @class = "form-control input-circle-right" } })
                                @Html.ValidationMessageFor(model => model.ReqStatus, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.ClientId, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.ClientId, new { htmlAttributes = new { @class = "form-control input-circle-right" } })
                                @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })    
                                <br /><br />
                            </div>


                            <div class="col-md-4">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    </div>
@section Plugins{
    <script src="~/assets/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js" type="text/javascript"></script>
<script src="~/assets/global/plugins/bootstrap-wysihtml5/wysihtml5-0.3.0.js" type="text/javascript"></script>
<script src="~/assets/global/plugins/bootstrap-wysihtml5/bootstrap-wysihtml5.js" type="text/javascript"></script>
<script src="~/assets/global/plugins/bootstrap-summernote/summernote.min.js" type="text/javascript"></script>
}


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
<script src="~/assets/pages/scripts/components-editors.min.js" type="text/javascript"></script>
<script src="~/assets/pages/scripts/components-date-time-pickers.min.js" type="text/javascript"></script>
        <script>
            $(document).ready(function () {
                function getJobs() {
                    $.ajax({
                        type: 'GET',
                        url: 'http://localhost:58124/api/settings/getjobs',
                        success: function (data) {
                            console.log('data returned from getJobs')
                            console.log(data)
                            $('#SelectItem').empty();
                            $('#SelectItem').append('<option value="">' + '--Select job--' + '</option>');
                            $.each(data, function (index, val) {

                                $('#SelectItem').append('<option value="' + val.JobId + '">' + val.JobName + '</option>');
                            })
                        }
                    });
                };
            });

            $('#JobTitle').bind('change', function () {
                getPositionsById($(this).val());
            })

            function getPositionsById(id) {
                var currentId = id;
                $.ajax({
                    type: 'GET',
                    url: 'http://localhost:58124/api/Settings/GetPositionById/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        console.log('in the Get position method');
                        console.log(currentId);
                        console.log(data);
                        $('#Position').empty();
                        if (data != '') {
                            $('#Position').append('<option value="">' + '--Select Position--' + '</option>');
                            $.each(data, function (index, val) {
                                $('#Position').append('<option value="' + val.PositionId + '">' + val.PositionName + '</option>');
                            })
                        } else {
                            $('#Position').append('<option value="">' + 'No position For this job' + '</option>')
                        }
                    },
                    failure: function () {
                        var message = {
                            message: "Failed to load data... Try again later"
                        };
                        $('#Position').append('<option value="">' + message.message + '</option>')
                    }
                })
            }

            $('#BusinessunitId').bind('change', function () {
                getDepartment($(this).val());
                getReportManagerByBusId($(this).val());
            })

            function getDepartment(id) {
                console.log(id);
                $.ajax({
                    type: 'GET',
                    url: 'http://localhost:58124/api/Settings/GetDepartmentsById/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {

                        console.log('in the Get department method');
                        console.log(data);
                        $('#department').empty();
                        $('#department').append('<option value="">' + '--Select department--' + '</option>');
                        $.each(data, function (index, val) {
                            $('#department').append('<option value="' + val.deptId + '">' + val.deptName + '</option>');
                        })
                    },
                    failure: function () {
                        var message = {
                            message: "Failed to load data... Try again later"
                        };
                        $('#department').append('<option value="">' + message.message + '</option>')
                    }
                })
            }

            function getReportManagerByBusId(id) {
                $.ajax({
                    type: 'GET',
                    url: 'http://localhost:58124/api/Settings/GetHrByBusinessUnit/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        console.log('in the getReportManagerByBusId  method');
                        console.log(data);
                        $('#ReportingId').empty();
                        if (data != '') {
                            $('#ReportingId').append('<option value="">' + '--Select Report Manager--' + '</option>');
                            $.each(data, function (index, data) {
                                $('#ReportingId').append('<option value="' + data.userId + '">' + data.FullName + '</option>');
                            })
                        } else {

                            $('#ReportingId').append('<option value="">' + 'No Report manager For this Unit yet' + '</option>')
                        }
                    },
                    failure: function () {
                        var message = {
                            message: "Failed to load data... Try again later"
                        };
                        $('#ReportingId').append('<option value="">' + message.message + '</option>')
                    }
                })
            }
        </script>
    }
