@model resourceEdge.Domain.Entities.GroupViewModel

<div class="page-header-fixed page-sidebar-closed-hide-logo page-content-white">
    <div class="clearfix"> </div>
    <div class="page-container">
        <a class="link" data-toggle="modal" href="#group">Add Group </a>
        <div id="group" class="modal fade" tabindex="-1" data-width="1000" data-backdrop="static" data-keyboard="true">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title succ" id="groupTitle">Add Group </h4>
            </div>

            <div id="groupContent">
                <div class="modal-body" id="empFrm">
                    @using (Ajax.BeginForm("AddGroup", "Configuration", new { returnurl = ViewBag.returnUrl }, new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "body" }, new { data_parsley_validate = "" }))
                    {
                        @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.GroupName)
                                        @Html.EditorFor(model => model.GroupName, new { htmlAttributes = new { @class = "form-control", required = "" } })
                                        @Html.ValidationMessageFor(model => model.Descriptions, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Descriptions)
   
                                        @Html.EditorFor(model => model.Descriptions, new { htmlAttributes = new { @class = "form-control", required = "" } })
                                        @Html.ValidationMessageFor(model => model.Descriptions, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="pull-right" style="clear:both">
                                    <button type="reset" data-dismiss="modal" class="btn btn-outline dark" onclick="group1.close()">Close</button>
                                    <input type="submit" class="btn btn-success" value="Create">
                                </div>
        
                    }
                    </div>
                </div>
            </div>
    </div>
</div>

