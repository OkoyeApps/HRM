@model resourceEdge.Domain.Entities.LevelsViewModel
@{
    Layout = ViewBag.Layout;
}
@section css{
    <style>
        textarea {
            resize: none;
        }
    </style>
}
<hr />
<div id="levelContent">
    <div class="modal-body" id="empFrm">
        @using (Ajax.BeginForm("AddLevel", "Configuration", new { returnurl = Request.Url.PathAndQuery }, new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "body" }, new { data_parsley_validate = "" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Name")
                    @Html.EditorFor(model => model.LevelName, new { htmlAttributes = new { @class = "form-control", required = "" } })
                    @Html.ValidationMessageFor(model => model.LevelName, "", new { @class = "text-danger" })
                </div>
            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("Level No")
                                    @Html.EditorFor(model => model.levelNo, new { htmlAttributes = new { @class = "form-control", required = "", @type = "text", placeholder = "level number in ranking (Only Numbers)" } })
                                    @Html.ValidationMessageFor(model => model.levelNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("Eligible Years")
                                    @Html.EditorFor(model => model.EligibleYears, new { htmlAttributes = new { @class = "form-control", required = "", @type = "text", placeholder = "Eligible years for level (Only Numbers)" } })
                                    @Html.ValidationMessageFor(model => model.EligibleYears, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div style="clear:both"><span></span></div>
                            <hr />
                            <div class="pull-left" style="">
                                <input type="submit" class="btn btn-success" value="Create">
                            </div>
        }
    </div>
</div>
<div class="pull-right col-md-2">

    <a href="@Url.Action("addJobTitle", "Configuration")" class="btn btn-danger ">Next</a>
</div>
