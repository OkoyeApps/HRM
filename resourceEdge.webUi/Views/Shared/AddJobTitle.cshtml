@model resourceEdge.Domain.Entities.Jobtitles

<div class="page-header-fixed page-sidebar-closed-hide-logo page-content-white">
    <div class="clearfix"> </div>
    <div class="page-container">
        <a class="btn btn-outline dark" data-toggle="modal" href="#jobTitle">Add Job Title </a>
        <div id="jobTitle" class="modal fade" tabindex="-1" data-width="1000" data-backdrop="static" data-keyboard="true">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title succ" id="jobTitle1">Add Job</h4>
            </div>
            <div id="jobContent">
                <div class="modal-body" id="empFrm">
                    @using (Ajax.BeginForm("AddJobTitle", "Configuration", new { returnurl = ViewBag.returnUrl }, new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "body" }, new { data_parsley_validate = "" }))
                    {

                                @Html.AntiForgeryToken()

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Job Titile Code")

                                            @Html.EditorFor(model => model.jobtitlecode, new { htmlAttributes = new { @class = "form-control", required = "" } })
                                            @Html.ValidationMessageFor(model => model.jobtitlecode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Job Name")
                                      
                                            @Html.EditorFor(model => model.jobtitlename, new { htmlAttributes = new { @class = "form-control", required = "" } })
                                            @Html.ValidationMessageFor(model => model.jobtitlename, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                  <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Description")
                                            @Html.EditorFor(model => model.jobdescription, new { htmlAttributes = new { @class = "form-control", required = "" } })
                                            @Html.ValidationMessageFor(model => model.jobdescription, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                        <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Minimum Experience Required")
                                            @Html.EditorFor(model => model.minexperiencerequired, new { htmlAttributes = new { @class = "form-control", required = "" } })
                                            @Html.ValidationMessageFor(model => model.minexperiencerequired, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                        <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Pay Grade Code")
                                            @Html.EditorFor(model => model.jobpaygradecode, new { htmlAttributes = new { @class = "form-control", required = "" } })
                                            @Html.ValidationMessageFor(model => model.jobpaygradecode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                        <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Pay Code")
                                            @Html.EditorFor(model => model.jobpayfrequency, new { htmlAttributes = new { @class = "form-control", required = "" } })
                                            @Html.ValidationMessageFor(model => model.jobpayfrequency, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                   <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.comments)
                                            <textarea cols="4" name="comments" class="form-control"></textarea>
                                            @Html.ValidationMessageFor(model => model.comments, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                        <div class="pull-right" style="clear:both">
                            <button type="reset" data-dismiss="modal" class="btn btn-outline dark" onclick="job.close()">Close</button>
                            <input type="submit" class="btn btn-success" value="Create">
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
