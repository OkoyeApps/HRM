@model resourceEdge.Domain.Entities.LocationViewModel
@{
    Layout = ViewBag.Layout;
}

            <div id="locationContent">
                <div class="modal-body" id="empFrm">
                    @using (Ajax.BeginForm("AddLocation", "Configuration", new { returnurl = ViewBag.returnUrl }, new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "body" }, new { data_parsley_validate = "" }))
                    {
                        @Html.AntiForgeryToken()

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Country")

                                    @Html.DropDownListFor(model => model.GroupId, (SelectList)ViewBag.Groups,"Select Group", htmlAttributes: new { data_live_search = "true", data_size = "4", @class = "bs-select form-control", required = "" })
                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                </div>
                            </div>

                                <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Country")
                                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", required = "" } })
                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                </div>
                            </div>
                                <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("State")
                                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", required = "" } })
                                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                                </div>
                            </div>
                                <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("City")
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", required = "" } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>
                                <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Address1")
                                    @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control", required = "" } })
                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                </div>
                            </div>
                                <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Address2")
                                    @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control"} })
                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div style="clear:both"><span></span></div>
                                <hr />

                                                    <div class="pull-left" style="">
                                                        <input type="submit" class="btn btn-success" value="Save">
                                                    </div>

                    }
                </div>
            </div>
<div class="pull-right col-md-2">

    <a href="@Url.Action("AddLevel", "Configuration", new { returnUrl = Request.Url.PathAndQuery})" class="btn btn-danger ">Next</a>
</div>

