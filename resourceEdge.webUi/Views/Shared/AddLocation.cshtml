@model resourceEdge.Domain.Entities.LocationViewModel

<div class="page-header-fixed page-sidebar-closed-hide-logo page-content-white">
    <div class="clearfix"> </div>
    <div class="page-container">
        <a class="link" data-toggle="modal" href="#location">Add Location </a>
        <div id="location" class="modal fade" tabindex="-1" data-width="1000" data-backdrop="static" data-keyboard="true">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title succ" id="locationTitle">Add Location </h4>
            </div>

            <div id="locationContent">
                <div class="modal-body" id="empFrm">
                    @using (Ajax.BeginForm("AddLocation", "Configuration", new { returnurl = ViewBag.returnUrl }, new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "body" }, new { data_parsley_validate = "" }))
                    {
                        @Html.AntiForgeryToken()

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Country")

                                    @Html.DropDownListFor(model => model.GroupId, (SelectList)ViewBag.Groups,"Select Group", htmlAttributes: new { data_live_search = "true", data_size = "4", @class = "bs-select form-control", required = "" })
                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                </div>
                            </div>

                                <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Country")
                                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", required = "" } })
                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                </div>
                            </div>
                                <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("State")
                                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", required = "" } })
                                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                                </div>
                            </div>
                                <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("City")
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", required = "" } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>
                                <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Address1")
                                    @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control", required = "" } })
                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                </div>
                            </div>
                                <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Address2")
                                    @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control"} })
                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="pull-right" style="clear:both">
                                <button type="reset" data-dismiss="modal" class="btn btn-outline dark" onclick="locmodal.close()">Close</button>
                                <input type="submit" class="btn btn-success" value="Create">
                            </div>

                }
                </div>
            </div>
        </div>
    </div>
</div>

