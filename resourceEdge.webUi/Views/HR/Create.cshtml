@model resourceEdge.Domain.Entities.EmployeeViewModel
@using resourceEdge.Domain.Entities
@{
    Layout = "~/Views/Shared/Layouts/_HrLayout.cshtml";
}
@section css{
    <style>
        #modal:hover {
            text-decoration: underline;
            cursor: pointer;
        }
    </style>
}

<div style="font-weight:bolder;">

    <span id="smodal" class="customModal" onclick="stat.open()">Add Status</span>|
    <span id="modal" onclick="job.open()">Add Job</span>|
    <span id="modal" onclick="level.open()">Add Level</span>|
    <span id="modal" onclick="position.open()">Add Position</span>|
    <span id="modal" onclick="prefixes.open()">Add Prefix</span>

</div>
<hr />
@using (Html.BeginForm("Create", "HR", new { returnUrl = ViewBag.returnUrl }, FormMethod.Post, new { data_parsley_validate = "" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    if (User.IsInRole("Super Admin"))
    {
        <div class="col-md-3">
            <div class="form-group">
                <label class="control-label">Group &nbsp;<b style="color:red;">*</b></label>
                @Html.DropDownList("GroupId", (SelectList)ViewBag.group, "Select Group", htmlAttributes: new { @class = "form-control", required = "", id= "GroupId" })
            </div>
        </div>
    }
    if (!User.IsInRole("Super Admin"))
    {
        <div class="col-md-3">
            <div class="form-group">
                @*@Html.Label("Identity Code", htmlAttributes: new { @class = "control-label" })*@
                <label class="control-label">Identity Code &nbsp;<b style="color:red;">*</b></label>
                @Html.EditorFor(x => x.identityCode, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", Value = ViewBag.code, required = "" } })
            </div>
        </div>
    }
    if (!User.IsInRole("Super Admin"))
    {
        <div class="col-md-3">
            <div class="form-group">
                @* @Html.Label("Location", htmlAttributes: new { @class = "control-label " })*@
                <label class="control-label">Location&nbsp; <b style="color:red;">*</b></label>
                @Html.DropDownListFor(x => x.Location, (SelectList)ViewBag.Locations, "Select Location", htmlAttributes: new { @class = "form-control", required = "" })
                @*<select id="Location" name="Location" class="form-control" required=""></select>*@
            </div>
        </div>
    }
    if (User.IsInRole("Super Admin"))
    {
        <div class="col-md-3">
            <div class="form-group">
                @* @Html.Label("Location", htmlAttributes: new { @class = "control-label " })*@
                <label class="control-label">Location&nbsp; <b style="color:red;">*</b></label>
                <select name="Location" id="Location" class="form-control">
                    <option>Please select group</option>
                </select>
            </div>
        </div>
    }

                <div class="col-md-3">
                    <div class="form-group">
                        @*  @Html.Label("Employee Id", htmlAttributes: new { @class = "control-label " })*@
                        <label class="control-label">Employee Id &nbsp;<b style="color:red;">*</b></label>
                        @Html.EditorFor(model => model.empUserId, new { htmlAttributes = new { id = "empId", placeholder = "Employee Id (only Numbers)", @class = "form-control", required = "", data_parsley_type = "number", data_parsley_min = "1" } })
  
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        @*@Html.Label("First name", htmlAttributes: new { @class = "control-label " })*@
                        <label class="control-label">First name &nbsp;<b style="color:red;">*</b></label>
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", required = "", placeholder = "Enter First name", data_parsley_minlength = "3" } })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        @* @Html.Label("Last name", htmlAttributes: new { @class = "control-label " })*@
                        <label class="control-label">Last name&nbsp; <b style="color:red;">*</b></label>
                        @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control", required = "", placeholder = "Enter last name", data_parsley_minlength = "3" } })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @*@Html.Label("Level", htmlAttributes: new { @class = "control-label " })*@
                        <label class="control-label">Level&nbsp;<b style="color:red;">*</b></label>
                        @Html.DropDownListFor(model => model.Level, (SelectList)ViewBag.Levels, "Select Level", htmlAttributes: new { @class = "form-control", required = "" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @*  @Html.Label("Email", htmlAttributes: new { @class = "control-label " })*@
                        <label class="control-label">Email&nbsp; <b style="color:red;">*</b></label>
                        @Html.EditorFor(model => model.empEmail, new { htmlAttributes = new { @class = "form-control ", required = "", data_parsley_type = "email", placeholder = "Enter Email address" } })
                     </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        @*  @Html.Label("Role", htmlAttributes: new { @class = "control-label " })*@
                        <label class="control-label">Role &nbsp;<b style="color:red;">*</b></label>
                        @Html.DropDownListFor(model => model.empRoleId, (SelectList)ViewBag.roles, "Select Role", htmlAttributes: new { @class = "form-control", required = "" })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        @*  @Html.Label("Business Unit", htmlAttributes: new { @class = "control-label " })*@
                        <label class="control-label">Business Unit&nbsp; <b style="color:red;">*</b></label>
                        <select id="businessunitId" style="align-items:center" name="businessunitId" class="form-control" required=""></select>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        @* @Html.Label("Department", htmlAttributes: new { @class = "control-label " })*@
                        <label class="control-label">Department&nbsp; <b style="color:red;">*</b></label>
                        <select id="departmentId" name="departmentId" class="form-control" required=""></select>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        @*  @Html.Label("Employement status", htmlAttributes: new { @class = "control-label " })*@
                        <label class="control-label">Employment status&nbsp; <b style="color:red;">*</b></label>
                        @Html.DropDownListFor(model => model.empStatusId, (SelectList)ViewBag.EmpStatus, "Select Status", htmlAttributes: new { id = "EmpStat", @class = "form-control", required = "" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @*@Html.Label("Job title", htmlAttributes: new { @class = "control-label " })*@
                        <label class="control-label">Job title &nbsp;<b style="color:red;">*</b></label>
                        @Html.DropDownListFor(model => model.jobtitleId, (SelectList)ViewBag.jobTitles, "Select Job", htmlAttributes: new { @class = "form-control", required = "" })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        @* @Html.Label("Position", htmlAttributes: new { @class = "control-label " })*@
                        <label class="control-label">Position&nbsp; <b style="color:red;">*</b></label>
                        <select id="positionId" name="positionId" class="form-control" required="">
                            <option>Please select a Job First</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @* @Html.Label("Years of experience", htmlAttributes: new { @class = "control-label " })*@
                        <label class="control-label">Years of experience&nbsp; <b style="color:red;">*</b></label>
                        @Html.EditorFor(model => model.yearsExp, new { htmlAttributes = new { @class = "form-control", required = "", placeholder = "Enter years of experience (Numbers only)", data_parsley_type = "number", data_parsley_min = "0" } })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        @* <label class="control-label">Date of joining</label>*@
                        <label class="control-label">Date of joining&nbsp; <b style="color:red;">*</b></label>
                        <input type="date" name="dateOfJoining" class="form-control" id="dateJoin"  onchange="validateDate()" required="" placeholder="dd-mm-yyyy">
                        <div id="dateSpan"></div>
                    </div>
               </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="control-label">Date of leaving</label>
                        <input type="date" name="dateOfLeaving" class="form-control" id="dateleave" onchange="validateDate()" placeholder="dd-mm-yyyy">
                       <div id="join_date_error_message"></div>
                    </div>
                </div>

                <div class="col-md-3" style="clear:both">
                    <div class="form-group">
                        @*    @Html.Label("Prefix", htmlAttributes: new { @class = "control-label " })*@
                        <label class="control-label">Prefix &nbsp;<b style="color:red;">*</b></label>
                        @Html.EnumDropDownListFor(model => model.prefixId, "Select Prefix", htmlAttributes: new { @class = "form-control", required = "" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @* @Html.Label("Office number", htmlAttributes: new { @class = "control-label " })*@
                        <label class="control-label">Office number&nbsp; <b style="color:red;">*</b></label>
                        @Html.EditorFor(model => model.officeNumber, new { htmlAttributes = new { @class = "form-control", @type = "tel", required = "", placeholder = "+234--- ----", data_parsley_pattern = @"^\+?[1-9]\d{1,14}$", data_required_message = "Please phone number seems to be invalid" } })
                    </div>
                </div>

                <div class="pull-right" style="clear:both;">
                    <input type="submit" id="hrSubmit" disabled onclick="validateDateOfJoining" class="btn btn-success" value="Save" />
                </div>
}
@section Scripts{
    <script src="~/Scripts/jBox.min.js"></script>
    <script src="~/assets/AdminTemplate/assets/js/apps.min.js"></script>
    <script src="~/assets/AdminTemplate/assets/plugins/parsley/dist/parsley.js"></script>
    <script src="~/Scripts/Pages/JS/HR/Create.js"></script>
    <script src="~/Scripts/Pages/JS/PartailPages/Modal.js"></script>
    <script>

        function validateDate() {
            console.log("Entered Function");
            var dateOfEntry = $('#dateJoin').val().split('-');
            var dateofExit = $('#dateleave').val().split('-');

            var currentDay1 = dateOfEntry[1] + '/' + dateOfEntry[2] + '/' + dateOfEntry[0];
            var currentDay2 = dateofExit[1] + '/' + dateofExit[2] + '/' + dateofExit[0];

            var entryDate = new Date(currentDay1);
            var exitDate = new Date(currentDay2);
            if (dateofExit[0] == '' && entryDate > new Date()) {
                $('#dateSpan').empty();
                $('#hrSubmit').prop('disabled', true);
                $('#dateSpan').append(`<span style="color:red">Please the entry date cannot be greater than today</span>`);
            }
            else if (dateofExit[0] != '' && entryDate > exitDate) {
                $('#dateSpan').empty();
                $('#hrSubmit').prop('disabled', true);
                $('#dateSpan').append(`<span style="color:red">Please the entry date cannot be greater than exit date</span>`);
            }
            else if (dateofExit[0] != '' && exitDate < entryDate) {
                $('#hrSubmit').prop('disabled', true);
                $('#join_date_error_message').empty();
                $('#join_date_error_message').append(`<span style="color:red">Please the exit date cannot be less than entry date`);
            }
           else if (dateofExit[0] != '' && exitDate < new Date()) {
               $('#hrSubmit').prop('disabled', true);
               $('#join_date_error_message').empty();
                $('#join_date_error_message').append(`<span style="color:red">Please no employee could have left before joining`);
                //$('#join_date_error_message').toggleClass('hidden');
           }
           else {
            $('#hrSubmit').prop('disabled', false);
            $('#dateSpan').empty();
            $('#join_date_error_message').empty();
           }
        };
       
    </script>

}

<div class="hide">
    @{ ViewBag.aa = "Checking";}
    <span id="empId">Action("GetEmployeeCodeByGroup", "settings")</span>
    @Html.Partial("AddJobTitle");
    @Html.Partial("addPosition");
    @Html.Partial("addPrefix");
    @Html.Partial("addEmploymentStatus");
    @Html.Partial("AddLevel");
    @Html.Partial("AddCareer");
    @Html.Partial("addPrefix")

</div>

