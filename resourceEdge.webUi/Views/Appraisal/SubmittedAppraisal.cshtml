@model IEnumerable<resourceEdge.Domain.Entities.AppraisalQuestionViewModel>
@{

    Layout = "~/Views/Shared/Layouts/_HrLayout.cshtml";
    int counter = 1;
    var isEditCountExceeded = Model.Any(x => x.EditCount == true);
    bool? isPersonal = ViewBag.Personal;
}
@section css{

    @Styles.Render("~/asset/tablecss");
}
<div class="table-responsive">

    @if (!isEditCountExceeded)
    {
        if (Model.Count() > 0)
        {
            <div class="pull-right">

            </div>
            <br />

            <br />
            <table class="table table-striped table-bordered display table-responsive">
                <tr>
                    <td>
                        <table class="pull-right">
                            @if ((User.IsInRole("L3") && Model.Any(x=>x.Status == null)) || (User.IsInRole("L2") || User.IsInRole("L1")) && !Request.Url.AbsolutePath.ToLower().Contains("myappraisal"))
                            {
                                <tr>
                                    <td>
                                        @using (Html.BeginForm("ApproveSubmittedAppraisalQuestion", "Appraisal", new { key = ViewBag.userId }, FormMethod.Post, null))
                                        {
                                            @Html.AntiForgeryToken()
                                            <button class="btn btn-success" type="submit">Accept All</button>
                                        }
                                    </td>
                                @if ((User.IsInRole("L3") && Model.Any(x => x.Status == null)))
                                {
                                    <td>
                                        @using (Html.BeginForm("DenySubmittedAppraisalQuestion", "Appraisal", new { key = ViewBag.userId, all = true }, FormMethod.Post, null))
                                        {
                                            @Html.AntiForgeryToken()
                                            <button class="btn btn-danger" type="submit">Reject All</button>
                                        }
                                    </td>
                                    }
                                </tr>
                            }
                        </table>
                    </td>
                </tr>
                <tr>
                    <td>
                        <table class="table table-striped table-bordered display table-responsive" id="tblGeneral">
                            <thead>
                                <tr>
                                    <th>S/N</th>
                                    <th>Performance Indicator</th>
                                    <th>Rating</th>
                                    @if (User.IsInRole("L3") )
                                    {
                                        <th></th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@counter</td>
                                        <td>@item.Question</td>
                                        <td>@item.Answers</td>
                                        @if (User.IsInRole("L3"))
                                        {
                                            <td>
                                                <table class="table-striped table-responsive">
                                                    <tr>
                                                        <td>
                                                            <table>

                                                                <tr>
                                                                    @if (item.Status == null)
                                                                    {
                                                                        <td>
                                                                            @using (Html.BeginForm("ApproveSubmittedAppraisalQuestion", "Appraisal", new { key = ViewBag.userId, QuestionId = item.id, type =(int)item.Type }, FormMethod.Post, null))
                                                                            {
                                                                                @Html.AntiForgeryToken()
                                                                                <button class="btn btn-success" type="submit">Accept</button>
                                                                            }
                                                                        </td>

                                                                        <td>
                                                                            @using (Html.BeginForm("DenySubmittedAppraisalQuestion", "Appraisal", new { key = ViewBag.userId, QuestionId = item.id, type = (int)item.Type }, FormMethod.Post, null))
                                                                            {
                                                                                @Html.AntiForgeryToken()
                                                                                <button class="btn btn-danger" type="submit">Reject</button>
                                                                            }
                                                                        </td>
                                                                    }
                                                                </tr>
                                                            </table>
                                                            <span></span>

                                                        </td>
                                                    </tr>
                                                </table>
                                            </td>
                                        }
                                    </tr>
                                    { counter++; }
                                }
                            </tbody>
                        </table>
                    </td>
                </tr>
            </table>
        }
        else
        {
            if (!isPersonal.HasValue)
            {
            <div class="alert alert-warning" style="text-align:center;font-size:large;"><small> Sorry! No appriasal submitted yet or All appraisal have been confirmed</small></div>
            }
            else
            {
                <div class="alert alert-warning" style="text-align:center;font-size:large;"><small> Sorry! you have not participated in this appraisal</small> </div>
            }
        }
    }
    @if (isEditCountExceeded)
    {
        <div class="alert alert-warning alert-dismissable" style="text-align:center;">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times; </button>
            <small> If you get here,it means the current Appraisee has exceeded his edit limit, please provide the suitable point(s) for his Appraisals.</small>
        </div>
        using (Html.BeginForm("ApproveSubmittedAppraisalQuestion", "Appraisal", new { key = ViewBag.userId }, FormMethod.Post, new { data_parsley_validate = "" }))
        {
            @Html.AntiForgeryToken()
            <table class="table table-striped table-bordered display table-responsive">
                <tr>
                    <td>
                        <button class="btn btn-success pull-right" type="submit">Accept All</button>
                    </td>
                </tr>
                <tr>
                    <td>
                        <table class="table table-striped table-bordered display table-responsive">
                            <thead>
                                <tr>
                                    <th>S/N</th>
                                    <th>Question</th>
                                    <th>Employee Answer</th>
                                    <th>Answer</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    @Html.HiddenFor(x => item.id);
                                    <tr>
                                        <td>@counter</td>
                                        <td>@item.Question</td>
                                        <td>@item.Answers</td>
                                        <td>
                                            <table>
                                                <tr>
                                                    <td><input name="AnswerFromL3" type="text" placeholder="Answer" class="form-control" required="" data-parsley-max="5" /></td>
                                                </tr>
                                            </table>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </td>
                </tr>
            </table>
        }
    }

</div>
@section Scripts{
    @Scripts.Render("~/assets/Table");
    <script src="~/Scripts/Pages/JS/DataTableInitialization.js"></script>
}