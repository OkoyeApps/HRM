@using resourceEdge.Domain.ViewModels
@model resourceEdge.Domain.Entities.AppraisalInitilizationViewModel
@{
    ViewBag.Title = "Initilize";
    Layout = "~/Views/Shared/Layouts/_HrLayout.cshtml";
    var dropdowns = (SystemViewModel)ViewBag.AllDropDown;
}



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Group, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                   @Html.DropDownListFor(model => model.Group, dropdowns.Groups, "Select Group", htmlAttributes: new { @class = "bs-select form-control" })
                   @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("From Year", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.FromYear, (SelectList)ViewBag.Years, "Select year", htmlAttributes: new { data_live_search = "true", data_size = "4", @class = "bs-select form-control" })
                @Html.ValidationMessageFor(model => model.FromYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("To Year", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
    @*            @Html.EditorFor(model => model.ToYear, new { htmlAttributes = new { @class = "form-control", type = "date" } })*@
                @Html.DropDownListFor(model => model.ToYear, (SelectList)ViewBag.Years, "Select year", htmlAttributes: new { data_live_search = "true", data_size = "4", @class = "bs-select form-control" })
                @Html.ValidationMessageFor(model => model.ToYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Appraisal Mode", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AppraisalMode, dropdowns.AppraisalMode, "Select Mode", htmlAttributes: new { data_live_search = "true", data_size = "4", @class = "bs-select form-control" })
                 @Html.ValidationMessageFor(model => model.AppraisalMode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Period, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Period, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly"} })
                @Html.ValidationMessageFor(model => model.Period, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Start Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Due Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Rating Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RatingType, dropdowns.Rating, "Select Rating Type", htmlAttributes: new { data_live_search = "true", data_size = "4", @class = "bs-select form-control" })
                   @Html.ValidationMessageFor(model => model.RatingType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Appraisal Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AppraisalStatus, dropdowns.Status, "Select Status", htmlAttributes: new { data_live_search = "true", data_size = "4", @class = "bs-select form-control" })
                 @Html.ValidationMessageFor(model => model.AppraisalStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="initsubmit" type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/Pages/JS/Appraisal/initilize.js"></script>
}
