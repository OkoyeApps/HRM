@model resourceEdge.webUi.Models.SystemModel.DisciplineListItem

@{
    ViewBag.Title = "EditIncident";
    Layout = "~/Views/Shared/Layouts/_HrLayout.cshtml";
}
@section css{
    <style>
        textarea {
            resize: none;
        }
    </style>

}

@using (Html.BeginForm("EditIncident","discipline", FormMethod.Post, new { returnurl = ViewBag.returnUrl, data_parsley_validate = "" }))
{
    @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Corrective Action", htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.CorrectiveAction, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CorrectiveAction, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Violation", htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.violation, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.violation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Business unit", htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Report Manager", htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.ReportManager, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ReportManager, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-4">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Response", htmlAttributes: new { @class = "control-label " })
                @Html.TextAreaFor(model => model.Response, new { @class = "form-control", required = "" })
            </div>
        </div>

        @*<div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Appeal, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Appeal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Appeal, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group pull-right" style="clear:both">
            <div class="col-md-offset-2 col-md-4">
                <input type="submit" value="Submit" class="btn btn-success" />
            </div>
        </div>

}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
